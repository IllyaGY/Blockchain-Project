{"ast":null,"code":"// src/useContract.js\nimport { ethers } from 'ethers';\nimport KickstartArtifact from './contract/Kickstart.json';\nlet contract;\nasync function getProvider() {\n  if (window.ethereum) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send('eth_requestAccounts', []);\n    return provider;\n  }\n  throw new Error('No Ethereum provider found. Install MetaMask or use a browser with an injected web3 provider.');\n}\nexport async function getContract() {\n  if (!contract) {\n    var _networks$netId;\n    const provider = await getProvider();\n    const signer = provider.getSigner();\n    const {\n      networks,\n      abi\n    } = KickstartArtifact;\n    // Grab the network ID your MetaMask/provider is connected to\n    const network = await provider.getNetwork();\n    const netId = network.chainId.toString();\n    const address = (_networks$netId = networks[netId]) === null || _networks$netId === void 0 ? void 0 : _networks$netId.address;\n    if (!address) {\n      throw new Error(`Contract not deployed on network ${netId}. ` + `Check that Truffle migrated to the same chain your wallet is on.`);\n    }\n    contract = new ethers.Contract(address, abi, signer);\n  }\n  return contract;\n}","map":{"version":3,"names":["ethers","KickstartArtifact","contract","getProvider","window","ethereum","provider","providers","Web3Provider","send","Error","getContract","_networks$netId","signer","getSigner","networks","abi","network","getNetwork","netId","chainId","toString","address","Contract"],"sources":["/home/igord/Blockchain-Project/kickstart-dapp/src/useContract.js"],"sourcesContent":["// src/useContract.js\nimport { ethers } from 'ethers';\nimport KickstartArtifact from './contract/Kickstart.json';\n\nlet contract;\n\nasync function getProvider() {\n  if (window.ethereum) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send('eth_requestAccounts', []);\n    return provider;\n  }\n  throw new Error(\n    'No Ethereum provider found. Install MetaMask or use a browser with an injected web3 provider.'\n  );\n}\n\nexport async function getContract() {\n  if (!contract) {\n    const provider = await getProvider();\n    const signer   = provider.getSigner();\n    const { networks, abi } = KickstartArtifact;\n    // Grab the network ID your MetaMask/provider is connected to\n    const network   = await provider.getNetwork();\n    const netId     = network.chainId.toString();\n    const address   = networks[netId]?.address;\n\n    if (!address) {\n      throw new Error(\n        `Contract not deployed on network ${netId}. ` +\n        `Check that Truffle migrated to the same chain your wallet is on.`\n      );\n    }\n\n    contract = new ethers.Contract(address, abi, signer);\n  }\n  return contract;\n}\n\n"],"mappings":"AAAA;AACA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,iBAAiB,MAAM,2BAA2B;AAEzD,IAAIC,QAAQ;AAEZ,eAAeC,WAAWA,CAAA,EAAG;EAC3B,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnB,MAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC9C,OAAOH,QAAQ;EACjB;EACA,MAAM,IAAII,KAAK,CACb,+FACF,CAAC;AACH;AAEA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,IAAI,CAACT,QAAQ,EAAE;IAAA,IAAAU,eAAA;IACb,MAAMN,QAAQ,GAAG,MAAMH,WAAW,CAAC,CAAC;IACpC,MAAMU,MAAM,GAAKP,QAAQ,CAACQ,SAAS,CAAC,CAAC;IACrC,MAAM;MAAEC,QAAQ;MAAEC;IAAI,CAAC,GAAGf,iBAAiB;IAC3C;IACA,MAAMgB,OAAO,GAAK,MAAMX,QAAQ,CAACY,UAAU,CAAC,CAAC;IAC7C,MAAMC,KAAK,GAAOF,OAAO,CAACG,OAAO,CAACC,QAAQ,CAAC,CAAC;IAC5C,MAAMC,OAAO,IAAAV,eAAA,GAAKG,QAAQ,CAACI,KAAK,CAAC,cAAAP,eAAA,uBAAfA,eAAA,CAAiBU,OAAO;IAE1C,IAAI,CAACA,OAAO,EAAE;MACZ,MAAM,IAAIZ,KAAK,CACb,oCAAoCS,KAAK,IAAI,GAC7C,kEACF,CAAC;IACH;IAEAjB,QAAQ,GAAG,IAAIF,MAAM,CAACuB,QAAQ,CAACD,OAAO,EAAEN,GAAG,EAAEH,MAAM,CAAC;EACtD;EACA,OAAOX,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}