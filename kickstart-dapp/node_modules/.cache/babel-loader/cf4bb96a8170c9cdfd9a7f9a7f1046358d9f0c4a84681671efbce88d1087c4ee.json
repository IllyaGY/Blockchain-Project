{"ast":null,"code":"import { ethers } from 'ethers';\nimport KickstartAbi from './contract/Kickstart.json';\nlet contract;\nexport async function getContract() {\n  if (!contract) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send('eth_requestAccounts', []);\n    const signer = provider.getSigner();\n    const address = process.env.REACT_APP_CONTRACT_ADDRESS;\n    contract = new ethers.Contract(address, KickstartAbi, signer);\n  }\n  return contract;\n}","map":{"version":3,"names":["ethers","KickstartAbi","contract","getContract","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","address","process","env","REACT_APP_CONTRACT_ADDRESS","Contract"],"sources":["/home/igord/Blockchain-Project/kickstart-dapp/src/useContract.js"],"sourcesContent":["import { ethers } from 'ethers';\nimport KickstartAbi from './contract/Kickstart.json';\n\nlet contract;\n\nexport async function getContract() {\n  if (!contract) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send('eth_requestAccounts', []);\n    const signer = provider.getSigner();\n    const address = process.env.REACT_APP_CONTRACT_ADDRESS;\n    contract = new ethers.Contract(address, KickstartAbi, signer);\n  }\n  return contract;\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,IAAIC,QAAQ;AAEZ,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,IAAI,CAACD,QAAQ,EAAE;IACb,MAAME,QAAQ,GAAG,IAAIJ,MAAM,CAACK,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC9C,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAS,CAAC,CAAC;IACnC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;IACtDb,QAAQ,GAAG,IAAIF,MAAM,CAACgB,QAAQ,CAACJ,OAAO,EAAEX,YAAY,EAAES,MAAM,CAAC;EAC/D;EACA,OAAOR,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}